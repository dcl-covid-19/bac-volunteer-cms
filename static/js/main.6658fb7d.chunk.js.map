{"version":3,"sources":["components/common/Toast.tsx","utils/constants.ts","components/table/ResourceFormFields.tsx","components/table/ResourceForm.tsx","components/table/ResourceDialog.tsx","utils/resource.ts","components/table/EditButton.tsx","components/table/ActionButtonsCell.tsx","components/table/ActionButtonsHeader.tsx","components/table/ErrorCell.tsx","components/table/TableBody.tsx","components/table/TableHeader.tsx","components/table/TablePaginationActions.tsx","components/table/FilterButton.tsx","components/table/NewResourceButton.tsx","components/table/ReorderList.tsx","components/table/ReorderForm.tsx","components/table/ReorderButton.tsx","components/table/Search.tsx","components/table/TableToolbar.tsx","components/table/Table.tsx","containers/App.tsx","index.tsx"],"names":["Toast","props","open","setOpen","severity","text","handleClose","event","reason","Snackbar","autoHideDuration","onClose","Alert","elevation","variant","SIMPLE_HEADERS","Object","freeze","CHECKBOX_GROUPS","RADIO_GROUPS","SIMPLE_OPTIONS","RESOURCE_CONDITION","NESTED_GROUPS","COMBO_COLUMNS","Header","id","accessor","row","address","city","state","zip","mon","tues","wed","thr","fri","sat","sun","filter","x","join","BOOLEAN_COLUMNS","DEFAULT_SHOWN","NESTED_HEADERS","keys","reduce","acc","field","__header","COMBO_HEADERS","column","HEADERS","SIMPLE_COLUMNS","map","key","NESTED_COLUMNS","COLUMNS","FLAT_OPTIONS","group","rest","OPTIONS","VALIDATORS","name","resource","hasOwnProperty","county","payment","includes","bob","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","checkboxError","color","palette","error","main","TextField","classes","fullWidth","required","useFormContext","register","errors","label","inputRef","className","RadioGroup","FormControl","component","FormLabel","option","type","value","ref","htmlFor","CheckboxGroup","setValue","triggerValidation","setAll","React","useCallback","setNone","style","display","onClick","RequiredCheckbox","control","useState","defaultValuesRef","current","checked","setChecked","indeterminate","setIndeterminate","onChange","target","as","input","rules","validate","formGroup","ResourceForm","watch","ResourceDialog","title","description","isOpen","onSubmit","successText","errorOpen","setErrorOpen","errorText","setErrorText","successOpen","setSuccessOpen","handleSubmit","formState","useEffect","errorFields","length","str","n","useWordBoundary","subString","substr","lastIndexOf","truncate","submitCount","Dialog","maxWidth","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","toForm","partial","toCheckboxes","matches","toRadio","fromForm","nest","list","Array","isArray","ones","zeros","toFlat","Number","fromBoolean","EditButton","originalResource","editHandler","initialForm","methods","useForm","mode","reValidateMode","defaultValues","Tooltip","IconButton","aria-label","JSON","stringify","getValues","reset","size","ActionButtonsCell","updateRow","flexDirection","getToggleRowSelectedProps","padding","original","index","ActionButtonsHeader","getToggleAllRowsSelectedProps","background","light","width","height","minWidth","minHeight","ErrorCell","Date","toLocaleString","timeZoneName","toString","zebra","backgroundColor","grey","TableBody","page","prepareRow","TableRow","getRowProps","clsx","cells","cell","TableCell","getCellProps","render","header","TableHeader","headerGroups","TableHead","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","TableSortLabel","active","isSorted","direction","isSortedDesc","root","flexShrink","marginLeft","TablePaginationActions","count","rowsPerPage","onChangePage","maxPages","Math","max","ceil","disabled","FilterButton","button","textTransform","NewResourceButton","newResourceHandler","startIcon","Typography","noWrap","draggable","userSelect","paper","dragging","lighten","primary","droppable","draggingOver","ReorderList","lists","droppableId","provided","snapshot","innerRef","isDraggingOver","item","draggableId","draggableProps","isDragging","dragHandleProps","placeholder","ReorderForm","setLists","onDragEnd","result","source","destination","startIndex","endIndex","from","splice","removed","reorder","shown","hidden","droppableSource","droppableDestination","sourceClone","destClone","move","ReorderButton","columnOrder","setColumnOrder","setHiddenColumns","skipPageResetRef","realColumns","Search","onSearchChange","globalFilter","InputProps","startAdornment","InputAdornment","position","fontSize","endAdornment","inputProps","useToolbarStyles","paddingLeft","paddingRight","highlight","dark","flex","TableToolbar","numSelected","setGlobalFilter","deleteHandler","selected","Toolbar","footer","border","borderTopWidth","borderTopColor","borderStyle","Table","data","setData","columns","defaultColumn","Cell","actionsColumn","useTable","initialState","hiddenColumns","autoResetPage","autoResetSortBy","autoResetFilters","autoResetGlobalFilter","useGlobalFilter","useSortBy","usePagination","useRowSelect","useColumnOrder","hooks","allColumns","push","getTableProps","rows","gotoPage","setPageSize","pageIndex","pageSize","selectedRowIds","concat","last_update","array","indexs","newData","parseInt","_","i","TableContainer","stickyHeader","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","ActionsComponent","App","results","useRef","Box","rowIndex","old","createMuiTheme","ReactDOM","StrictMode","Fragment","CssBaseline","document","getElementById"],"mappings":"0g1OAsCeA,EA1B2C,SAACC,GAAW,IAC5DC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,QAASC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAC3BC,EAAc,SAACC,EAA8BC,GAClC,cAAXA,GAGJL,GAAQ,IAEV,OACE,kBAACM,EAAA,EAAD,CACEP,KAAMA,EACNQ,iBAAkB,IAClBC,QAASL,GAET,kBAACM,EAAA,EAAD,CACEC,UAAW,EACXC,QAAQ,SACRH,QAASL,EACTF,SAAUA,GAETC,K,mDC5BHU,EAAiBC,OAAOC,OAAO,CACnC,SAAY,WACZ,gBAAmB,mBACnB,cAAiB,gBACjB,gBAAmB,2BACnB,QAAW,eACX,gBAAmB,kBACnB,OAAU,SACV,IAAO,cACP,YAAe,eACf,MAAS,iBACT,MAAS,QACT,SAAY,kBACZ,SAAY,UACZ,YAAe,oBACf,OAAU,WAGCC,EAAkBF,OAAOC,OAAO,CAC3C,OAAU,CACR,SAAY,kBACZ,QAAW,UACX,YAAe,cACf,UAAa,YACb,aAAgB,eAChB,MAAS,QACT,SAAY,WACZ,OAAU,SACV,OAAU,SACV,KAAQ,OACR,cAAiB,mBAIRE,EAAeH,OAAOC,OAAO,CACxC,QAAW,CACT,SAAY,eACZ,KAAQ,OACR,cAAiB,gBACjB,qBAAwB,yBAItBG,EAAiBJ,OAAOC,OAAO,CACnC,SAAY,CACV,KAAQ,qBACR,QAAW,mBACX,KAAQ,6DACR,UAAa,uBACb,mBAAsB,yFACtB,iBAAoB,+EACpB,OAAU,4DACV,mBAAsB,oFAIbI,EAAqBL,OAAOC,OAAO,CAC9C,QAAW,CAAC,SAAU,mBAAoB,wBAG/BK,EAAgBN,OAAOC,OAAPD,OAAA,IAAAA,QAAA,IAAAA,CAAA,GAAmBE,GAAoBC,IAEvDI,EAAgBP,OAAOC,OAAO,CACzC,CACEO,OAAQ,UACRC,GAAI,UACJC,SAAU,SAACC,GAAD,gBACLA,EAAIC,QADC,aACWD,EAAIE,KADf,aACwBF,EAAIG,MAD5B,YACqCH,EAAII,OAGrD,CACEP,OAAQ,gBACRC,GAAI,gBACJC,SAAU,SAACC,GAAD,MAAqB,CAC7BA,EAAIK,KAAmB,MAAZL,EAAIK,KAAf,iBAAwCL,EAAIK,KAC5CL,EAAIM,MAAqB,MAAbN,EAAIM,MAAhB,kBAA2CN,EAAIM,MAC/CN,EAAIO,KAAmB,MAAZP,EAAIO,KAAf,oBAA2CP,EAAIO,KAC/CP,EAAIQ,KAAmB,MAAZR,EAAIQ,KAAf,mBAA0CR,EAAIQ,KAC9CR,EAAIS,KAAmB,MAAZT,EAAIS,KAAf,iBAAwCT,EAAIS,KAC5CT,EAAIU,KAAmB,MAAZV,EAAIU,KAAf,mBAA0CV,EAAIU,KAC9CV,EAAIW,KAAmB,MAAZX,EAAIW,KAAf,iBAAwCX,EAAIW,MAC5CC,QAAO,SAAAC,GAAC,QAAMA,KAAGC,KAAK,UAIfC,EAAqC1B,OAAOC,OAAO,CAC9D,kBACA,kBACA,QAGW0B,EAAgB3B,OAAOC,OAAO,CACzC,gBACA,WACA,SACA,UACA,gBAGI2B,EAAiB5B,OAAO6B,KAAKvB,GAAewB,QAChD,SAACC,EAAaC,GAAd,mBAAC,eACID,GADL,kBAEGC,EAAQ1B,EAAc0B,GAAuCC,aAEhE,IAGIC,EAAgB3B,EAAcuB,QAClC,SAACC,EAAaI,GAAd,mBAAC,eACIJ,GADL,kBAEGI,EAAO1B,GAAe0B,EAAO3B,WAEhC,IAGW4B,EAAepC,OAAOC,OAAPD,OAAA,IAAAA,QAAA,IAAAA,QAAA,IAAAA,CAAA,GACvBD,GACA6B,GACAM,IAGCG,EAA4CrC,OAAOC,OACvDD,OAAO6B,KAAK9B,GAAgBuC,KAC1B,SAAAC,GAAG,MAAK,CAAE/B,OAAST,EAAuBwC,GAAM7B,SAAU6B,OAIxDC,GAA4CxC,OAAOC,OACvDD,OAAO6B,KAAKvB,GAAegC,KACzB,SAAAC,GAAG,MAAK,CACN/B,OAAQ4B,EAAQG,GAChB7B,SAAU,SAACC,GACT,OAAOX,OAAO6B,KAAMvB,EAAsBiC,IAAMhB,QAC9C,SAAAS,GAAK,MAAc,aAAVA,GAAwBrB,EAAIqB,MACrCM,KACA,SAAAN,GAAK,OAAK1B,EAAsBiC,GAAKP,MACrCP,KAAK,OAEThB,GAAI8B,OAKGE,GAAUzC,OAAOC,OAAP,UAAAD,OAAA,IAAAA,CAClBqC,GADkBrC,OAAA,IAAAA,CAElBwC,IAFkBxC,OAAA,IAAAA,CAGlBO,KAGQmC,GAAe1C,OAAO6B,KAAK1B,GAAc2B,QACpD,SAACC,EAAaC,GACZ,IAAMW,EAAQxC,EAAa6B,GACNY,GAASD,EAAtBV,SAFsB,YAEAU,EAFA,eAG9B,OAAO,2BAAKZ,GAAZ,kBAAkBC,EAAQY,MAE5B,IAGWC,GAAe7C,OAAOC,OAAPD,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACvBI,GACAsC,KAGQI,GAAkB9C,OAAOC,OAAO,CAC3C,cAAiB,SAAC8C,GAAD,QAAoBA,GACrC,SAAY,SAACC,GAAD,OAAsBH,GAAQG,SAASC,eAAeD,IAClE,OAAU,SAACE,GAAD,QAAsBA,GAChC,QAAW,SAACC,GAAD,QAAuBA,IAAYA,EAAQC,SAAS,MAC/D,IAAO,SAACC,GAAD,OAAgC,MAAPA,KCnK5BC,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1DC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,IAExBC,cAAe,CACbC,MAAON,EAAMO,QAAQC,MAAMC,WAUlBC,GAAiD,SAACjF,GAC7D,IAAMkF,EAAUb,KACRtB,EAA+B/C,EAA/B+C,MAAOoC,EAAwBnF,EAAxBmF,UAAWC,EAAapF,EAAboF,SAF6C,EAG1CC,cAArBC,EAH+D,EAG/DA,SAAUC,EAHqD,EAGrDA,OAElB,OACE,kBAAC,IAAD,CACEJ,UAAWA,EACXC,SAAUA,EACVvE,QAAQ,SACRkE,QAASQ,EAAOxC,GAChByC,MAAOrC,EAAQJ,GACfe,KAAMf,EACN0C,SAAUH,EAAS,CAAEF,aACrBM,UAAWR,EAAQT,eASZkB,GAAkD,SAAC3F,GAC9D,IAAMkF,EAAUb,KACRtB,EAA+B/C,EAA/B+C,MAAOoC,EAAwBnF,EAAxBmF,UAAWC,EAAapF,EAAboF,SAF8C,EAG3CC,cAArBC,EAHgE,EAGhEA,SAAUC,EAHsD,EAGtDA,OAElB,OACE,kBAACK,EAAA,EAAD,CACEC,UAAU,WACVV,UAAWA,EACXC,SAAUA,EACVL,QAASQ,EAAOxC,GAChB2C,UAAWR,EAAQT,aAEnB,kBAACqB,EAAA,EAAD,CAAWD,UAAU,UAAU1C,EAAQJ,IACtChC,OAAO6B,KAAKgB,GAAQb,IAAQM,KAAI,SAAA0C,GAAM,OACrC,6BACE,2BACEC,KAAK,QACLxE,GAAIuE,EACJzC,IAAKyC,EACLjC,KAAMf,EACNkD,MAAOF,EACPG,IAAKZ,EAAS,CAAEF,eAElB,2BAAOe,QAASJ,GACZnC,GAAQb,GAAegD,UAYxBK,GACT,SAACpG,GACH,IAAMkF,EAAUb,KACRtB,EAA+B/C,EAA/B+C,MAAOoC,EAAwBnF,EAAxBmF,UAAWC,EAAapF,EAAboF,SAFb,EAG6CC,cAAlDC,EAHK,EAGLA,SAAUC,EAHL,EAGKA,OAAQc,EAHb,EAGaA,SAAUC,EAHvB,EAGuBA,kBAC9BC,EAASC,IAAMC,aAAY,WAC/BJ,EAAStD,EAAOhC,OAAO6B,KAAK3B,EAAgB8B,KAC5CuD,EAAkBvD,KACjB,CAACsD,EAAUC,EAAmBvD,IAC3B2D,EAAUF,IAAMC,aAAY,WAChCJ,EAAStD,EAAO,IAChBuD,EAAkBvD,KACjB,CAACsD,EAAUC,EAAmBvD,IACjC,OACE,kBAAC6C,EAAA,EAAD,CACEC,UAAU,WACVV,UAAWA,EACXC,SAAUA,EACVL,QAASQ,EAAOxC,GAChB2C,UAAWR,EAAQT,aAEnB,kBAACqB,EAAA,EAAD,CAAWD,UAAU,UAClB5E,EAAgB8B,GAAOC,UAE1B,yBAAK2D,MAAO,CAAEC,QAAS,SACrB,4BAAQC,QAASN,GAAjB,OACA,4BAAQM,QAASH,GAAjB,SAGA3F,OAAO6B,KAAK3B,EAAgB8B,IAAQT,QAClC,SAAAyD,GAAM,MAAe,aAAXA,KACV1C,KACA,SAAC0C,GAAD,OACE,6BACE,2BACEC,KAAK,WACLxE,GAAIuE,EACJzC,IAAKyC,EACLE,MAAOF,EACPjC,KAAMf,EACNmD,IAAKZ,EAAS,CAAEF,eAElB,2BAAOe,QAASJ,GACZ9E,EAAgB8B,GAAegD,UAUpCe,GACT,SAAC9G,GACH,IAAMkF,EAAUb,KACRtB,EAAU/C,EAAV+C,MAFK,EAGesC,cAApB0B,EAHK,EAGLA,QAASxB,EAHJ,EAGIA,OAHJ,EAIiBiB,IAAMQ,WAChCD,EAAQE,iBAAiBC,QAAQnE,IALxB,mBAINoE,EAJM,KAIGC,EAJH,OAO6BZ,IAAMQ,SACH,MAA3CD,EAAQE,iBAAiBC,QAAQnE,IARtB,mBAONsE,EAPM,KAOSC,EAPT,KAUPC,EAAWf,IAAMC,aACrB,YAAqD,IAAnDnG,EAAkD,oBAC5C6G,GAAWE,GAAiB/G,EAAMkH,OAAOL,QAG/C,OAFAC,EAAWD,GACXG,GAAiB,GACVH,IAET,CAACE,EAAeD,EAAYE,IAG9B,OACE,oCACE,0BAAM5B,UAAWH,EAAOxC,IAAUmC,EAAQN,eACxC,kBAAC,IAAD,CACE6C,GACE,2BACEvB,IAAK,SAAAwB,GACCA,IACFA,EAAML,cAAgBA,IAG1BF,QAASA,EACT3F,GAAIuB,EACJiD,KAAK,aAGTlC,KAAMf,EACNgE,QAASA,EACTQ,SAAUA,EACVI,MAAO,CAAEC,SAAU,SAACrF,GAAD,OAAiB,MAALA,MAEnC,2BAAO4D,QAASpD,GAAQI,EAAQJ,OCtKhCsB,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1DqD,UAAW,CACTnD,OAAQH,EAAMI,QAAQ,SA4BXmD,GArBX,WACF,IAAM5C,EAAUb,KADR,EAEmBgB,cAAnB0B,EAFA,EAEAA,QACFhD,GAAWgE,EAHT,EAESA,OACM,YAEvB,OACE,oCACE,kBAAC,UAAD,CAAShB,QAASA,IAClB,kBAAC,GAAD,CAAW5B,WAAS,EAACC,UAAQ,EAACrC,MAAM,kBACpC,kBAAC,GAAD,CAAYqC,UAAQ,EAACrC,MAAM,aAC3B,kBAAC,GAAD,CAAeqC,UAAQ,EAACrC,MAAM,WAC7B3B,EAAmB8C,QAAQC,SAASJ,IACjC,kBAAC,GAAD,CAAYqB,UAAQ,EAACrC,MAAM,YAC/B,kBAAC,GAAD,CAAWoC,WAAS,EAACpC,MAAM,YAC3B,yBAAK2C,UAAWR,EAAQ2C,WACtB,kBAAC,GAAD,CAAkB9E,MAAM,WCPnBiF,GACT,SAAChI,GAAW,IACNiI,EAA+DjI,EAA/DiI,MAAOC,EAAwDlI,EAAxDkI,YAAaC,EAA2CnI,EAA3CmI,OAAQjI,EAAmCF,EAAnCE,QAASkI,EAA0BpI,EAA1BoI,SAAUC,EAAgBrI,EAAhBqI,YAD1C,EAEuB7B,IAAMQ,UAAkB,GAF/C,mBAELsB,EAFK,KAEMC,EAFN,OAGuB/B,IAAMQ,SAAiB,IAH9C,mBAGLwB,EAHK,KAGMC,EAHN,OAI2BjC,IAAMQ,UAAkB,GAJnD,mBAIL0B,EAJK,KAIQC,EAJR,KAKPtI,EAAc,kBAAMH,GAAQ,IALrB,EAM+BmF,cAApCuD,EANK,EAMLA,aAAcrD,EANT,EAMSA,OAAQsD,EANjB,EAMiBA,UAkB9B,OAjBArC,IAAMsC,WAAU,WACd,IAAMC,EAAchI,OAAO6B,KAAK2C,GACL,IAAvBwD,EAAYC,QACdP,EAnBW,SAACQ,EAAaC,EAAWC,GACxC,GAAIF,EAAID,QAAUE,EAAK,OAAOD,EAC9B,IAAMG,EAAYH,EAAII,OAAO,EAAGH,EAAE,GAClC,OAAQC,EACJC,EAAUC,OAAO,EAAGD,EAAUE,YAAY,MAC1CF,GAAa,MAcAG,CAAS,4BAAD,OACnBR,EAAY1F,KACV,SAAA0B,GAAK,OAAI5B,EAAQa,eAAee,GAAS5B,EAAQ4B,GAASA,KAC1DvC,KAAK,OACL,IAAI,IACR+F,GAAa,GACbI,GAAe,IACNE,EAAUW,YAAc,IACjCb,GAAe,GACfJ,GAAa,MAGd,CAACM,EAAUW,cAGZ,6BACE,kBAACC,EAAA,EAAD,CACEC,SAAS,KACTzJ,KAAMkI,EACNzH,QAASL,EACTsJ,kBAAgB,gBAEhB,kBAACC,EAAA,EAAD,CAAapI,GAAG,gBAAgByG,GAChC,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAoB5B,GACpB,kBAAC,GAAD,OAEF,kBAAC6B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQnD,QAASxG,EAAawE,MAAM,aAApC,UAGA,kBAACmF,EAAA,EAAD,CACEnD,QAAS+B,EAAaR,GACtBvH,QAAQ,YACRgE,MAAM,WAHR,YASJ,kBAAC,EAAD,CACE5E,KAAMqI,EACNpI,QAASqI,EACTpI,SAAS,QACTC,KAAMoI,IAER,kBAAC,EAAD,CACEvI,KAAMyI,EACNxI,QAASyI,EACTxI,SAAS,UACTC,KAAMiI,M,UClBD4B,GAAS,SAAClG,GAAD,OA7BlB,SAACA,GAAD,OAAyBhD,OAAO6B,KAAK3B,GAAiB4B,QACxD,SAACqH,EAAcnH,GAAf,mBAAC,eACImH,GADL,kBAEGnH,EAAQhC,OAAO6B,KACd3B,EAAgB8B,IAChBT,QACA,SAAAgB,GAAG,MAAY,aAARA,KAAwB4G,EAAQ5G,UAG3CS,GAqBAoG,CAhBE,SAACpG,GAAD,OAAyBhD,OAAO6B,KAAK1B,GAAc2B,QACrD,SAACqH,EAAcnH,GACb,IAAMqH,EAAUrJ,OAAO6B,KACrB1B,EAAa6B,IACbT,QACA,SAAAgB,GAAG,MAAY,aAARA,KAAwB4G,EAAQ5G,MAEzC,OAAO,2BACF4G,GADL,kBAEGnH,EAA2B,IAAnBqH,EAAQpB,OAAeoB,EAAQ,GAAK,OAGjDrG,GAIasG,CAAQtG,KAEVuG,GAAW,SAACvG,GAAD,OA1DpB,SAACA,GAAD,OAAyBhD,OAAO6B,KAAKvB,GAAewB,QACtD,SAACqH,EAAcnH,GAAmB,IACfwH,EAAkBL,EAA1BnH,GAAiBY,EADK,YACIuG,EADJ,CACtBnH,GADsB,WAE/B,GAAY,MAARwH,EACF,OAAOL,EAET,IAAMM,EAAOC,MAAMC,QAAQH,GAAQA,EAAO,CAACA,GACrCI,EAAOH,EAAK3H,QAChB,SAACC,EAAaQ,GAAd,mBAAC,eAAmCR,GAApC,kBAA0CQ,EAAM,MAChD,IAEIsH,EAAQ7J,OAAO6B,KACnBvB,EAAc0B,IACdT,QACA,SAAAgB,GAAG,MAAY,aAARA,IAAuBkH,EAAKrG,SAASb,MAC5CT,QACA,SAACC,EAAaQ,GAAd,mBAAC,eAAmCR,GAApC,kBAA0CQ,EAAM,MAChD,IAEF,OAAO,uCAAKK,GAASgH,GAASC,KAEhC7G,GAqC+C8G,CApEtB,SAAC9G,GAAD,mBAAC,eACvBA,GACAtB,EAAgBI,QACjB,SAACC,EAAaC,GAAd,mBAAC,eAAqCD,GAAtC,kBAA4CC,EAAQ+H,OAAO/G,EAAShB,QACpE,KAgEoDgI,CAAYhH,KCnBrDiH,GAzC8C,SAAChL,GAAW,IAC/DiL,EAAkCjL,EAAlCiL,iBAAkBC,EAAgBlL,EAAhBkL,YAD4C,EAE5C1E,IAAMQ,UAAkB,GAFoB,mBAE/DmB,EAF+D,KAEvDjI,EAFuD,KAGhEiL,EAAclB,GAAOgB,GACrBG,EAAUC,YAAQ,CACtBC,KAAM,WACNC,eAAgB,WAChBC,cAAeL,IAcjB,OACE,oCACE,kBAACM,EAAA,EAAD,CAASxD,MAAM,iBACb,kBAACyD,EAAA,EAAD,CAAYC,aAAW,gBAAgB9E,QAfrB,WAClB+E,KAAKC,UAAUT,EAAQU,eACvBF,KAAKC,UAAUV,IACjBC,EAAQW,MAAMZ,GAEhBjL,GAAQ,IAU6D8L,KAAK,SACpE,kBAAC,IAAD,QAGJ,kBAAC,IAAgBZ,EACf,kBAAC,GAAD,CACEnD,MAAM,gBACNE,OAAQA,EACRjI,QAASA,EACTkI,SAjBS,SAACrE,GAChBmH,EAAYZ,GAASvG,IACrB7D,GAAQ,IAgBFmI,YAAY,oCCtBP4D,GAfX,SAACjM,GAAW,IACN0B,EAAmB1B,EAAnB0B,IAAKwK,EAAclM,EAAdkM,UAEb,OACE,yBAAKvF,MAAO,CAAEC,QAAS,OAAQuF,cAAe,QAC5C,kBAAC,IAAD,iBACMzK,EAAI0K,4BADV,CAEEvH,MAAM,UACN8B,MAAO,CAAE0F,QAAS,MAEpB,kBAAC,GAAD,CAAYpB,iBAAkBvJ,EAAI4K,SAAUpB,YAR5B,SAACnH,GAAD,OAAyBmI,EAAUxK,EAAI6K,MAAOxI,QCGrDyI,GAPX,SAACxM,GAAW,IACNyM,EAAkCzM,EAAlCyM,8BACR,OACE,kBAAC,IAAD,iBAAcA,IAAd,CAA+C5H,MAAM,cCRnDR,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCQ,MAAO,CACL2H,WAAYnI,EAAMO,QAAQC,MAAM4H,MAChCC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVC,UAAW,YA2BAC,GAlB4C,SAAChN,GAC1D,IAAMkF,EAAUb,KACRnB,EAAWlD,EAAXkD,OACF+C,EAAsB,gBAAd/C,EAAO1B,GACnB,IAAIyL,KAAKjN,EAAMiG,OAAOiH,eACpB,QAAS,CAAEC,aAAc,UAEzBnN,EAAMiG,MAIV,OAHkB/C,EAAO1B,IAAMqC,GAAWX,EAAO1B,MAC5CqC,GAAWX,EAAO1B,IAAIyE,GAIvB,yBAAKP,UAAWR,EAAQH,OAAQkB,EAAO,QAC7B,MAATA,EAAgBA,EAAMmH,WAAa,M,sCC3BpC/I,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1D6I,MAAO,CACLC,gBAAiB/I,EAAMO,QAAQyI,KAAK,WA2CzBC,GAlC4C,SAACxN,GAC1D,IAAMkF,EAAUb,KACRoJ,EAAqBzN,EAArByN,KAAMC,EAAe1N,EAAf0N,WAEd,OACE,kBAAC,KAAD,KACGD,EAAKpK,KAAI,SAAA3B,GAER,OADAgM,EAAWhM,GAET,kBAACiM,GAAA,EAAD,iBACMjM,EAAIkM,cADV,CAEElI,UAAWmI,aAAK,eAAG3I,EAAQmI,MAAQ3L,EAAI6K,MAAQ,MAE9C7K,EAAIoM,MAAMzK,KAAI,SAAA0K,GACb,OACE,kBAACC,GAAA,EAAD,iBACMD,EAAKE,eADX,CAEE5B,QACqB,YAAnB0B,EAAK7K,OAAO1B,GACZ,WACA,YAGDuM,EAAKG,OAAO,kB,oBClCzB7J,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1D2J,OAAQ,CACNb,gBAAiB/I,EAAMO,QAAQyI,KAAK,WA0CzBa,GAlCgD,SAACpO,GAC9D,IAAMkF,EAAUb,KACRgK,EAAiBrO,EAAjBqO,aAER,OACE,kBAACC,GAAA,EAAD,KACGD,EAAahL,KAAI,SAAAkL,GAAW,OAC3B,kBAACZ,GAAA,EAAaY,EAAYC,sBACvBD,EAAYE,QAAQpL,KAAI,SAAAH,GAAM,OAC7B,kBAAC8K,GAAA,EAAD,eACEtI,UAAWR,EAAQiJ,OACnB9B,QACgB,YAAdnJ,EAAO1B,GAAmB,WAAa,WAEtB,YAAd0B,EAAO1B,GACR0B,EAAOwL,iBACPxL,EAAOwL,eAAexL,EAAOyL,yBAElB,YAAdzL,EAAO1B,GACN,kBAACoN,GAAA,EAAD,CACEC,OAAQ3L,EAAO4L,SACfC,UAAW7L,EAAO8L,aAAe,OAAS,OAEzC9L,EAAOgL,OAAO,WAEfhL,EAAOgL,OAAO,oB,gFC/B1B7J,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXyK,KAAM,CACJC,WAAY,EACZC,WAAY5K,EAAMI,QAAQ,WA6CjByK,GAtCX,SAACpP,GACH,IAAMkF,EAAUb,KACRgL,EAA2CrP,EAA3CqP,MAAO5B,EAAoCzN,EAApCyN,KAAM6B,EAA8BtP,EAA9BsP,YAAaC,EAAiBvP,EAAjBuP,aAE5BC,EAAWC,KAAKC,IAAI,EAAGD,KAAKE,KAAKN,EAAQC,GAAe,GAa9D,OACE,yBAAK5J,UAAWR,EAAQ+J,MACtB,kBAACvD,EAAA,EAAD,CAAY7E,QAbZ,SAACvG,GAAD,OAAgDiP,EAAajP,EAAO,IAanBsP,SAAmB,IAATnC,GACzD,kBAAC,KAAD,OAEF,kBAAC/B,EAAA,EAAD,CAAY7E,QAfc,SAC5BvG,GAD4B,OAEzBiP,EAAajP,EAAOmN,EAAO,IAagBmC,SAAmB,IAATnC,GACpD,kBAAC,KAAD,OAEF,kBAAC/B,EAAA,EAAD,CAAY7E,QAfc,SAC5BvG,GAD4B,OAEzBiP,EAAajP,EAAOmN,EAAO,IAagBmC,SAAUnC,GAAQ+B,GAC5D,kBAAC,KAAD,OAEF,kBAAC9D,EAAA,EAAD,CACE7E,QAhB4B,SAChCvG,GADgC,OAE7BiP,EAAajP,EAAOkP,IAenBI,SAAUnC,GAAQ+B,GAElB,kBAAC,KAAD,S,qECnCOK,GAZkD,WAC/D,OACE,oCACE,kBAACpE,EAAA,EAAD,CAASxD,MAAM,oBACb,kBAACyD,EAAA,EAAD,CAAYC,aAAW,mBAAmBK,KAAK,SAC7C,kBAAC,KAAD,U,oBCFJ3H,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1DsL,OAAQ,CACNC,cAAe,OACfrL,OAAQH,EAAMI,QAAQ,SAgDXqL,GAvCX,SAAChQ,GACH,IAAMkF,EAAUb,KACR4L,EAAuBjQ,EAAvBiQ,mBAFK,EAGazJ,IAAMQ,UAAkB,GAHrC,mBAGNmB,EAHM,KAGEjI,EAHF,KAIPkL,EAAUC,YAAmB,CACjCC,KAAM,WACNC,eAAgB,aAQlB,OACE,6BACE,kBAACvB,EAAA,EAAD,CACEnJ,QAAQ,YACRgE,MAAM,UACNqL,UAAW,kBAAC,KAAD,MACXxK,UAAWR,EAAQ4K,OACnBjJ,QAbkB,kBAAM3G,GAAQ,KAehC,kBAACiQ,GAAA,EAAD,CAAYC,QAAM,GAAlB,iBAEF,kBAAC,IAAgBhF,EACf,kBAAC,GAAD,CACEnD,MAAM,eACNC,YAAY,uCACZC,OAAQA,EACRjI,QAASA,EACTkI,SAtBS,SAACrE,GAChBkM,EAAmB3F,GAASvG,IAC5B7D,GAAQ,IAqBFmI,YAAY,mC,4DC/ChBhE,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1D6L,UAAW,CACTzJ,QAAS,OACT0J,WAAY,OACZ5D,WAAYnI,EAAMO,QAAQ4H,WAAW6D,OAEvCC,SAAU,CACR9D,WAAY+D,aAAQlM,EAAMO,QAAQ4L,QAAQ/D,MAAO,MAEnDgE,UAAW,CACT5D,UAAW,OAEb6D,aAAc,CACZlE,WAAYnI,EAAMO,QAAQyI,KAAK,WActBsD,GAAyD,SAAC7Q,GACrE,IAAMkF,EAAUb,KACRyM,EAAc9Q,EAAd8Q,MAAOtP,EAAOxB,EAAPwB,GAEf,OACE,kBAAC,KAAD,CAAWuP,YAAavP,IACrB,SAACwP,EAAUC,GAAX,OACG,yBACE/K,IAAK8K,EAASE,SACdxL,UAAWmI,aAAK3I,EAAQyL,UAAT,eACZzL,EAAQ0L,aAAeK,EAASE,kBAGlCL,EAAMtP,GAAI6B,KAAI,SAAC+N,EAAM7E,GAAP,OACb,kBAAC,KAAD,CAAWjJ,IAAK8N,EAAMC,YAAaD,EAAM7E,MAAOA,IAE9C,SAACyE,EAAUC,GAAX,OACE,yCACMD,EAASM,eADf,CAEEpL,IAAK8K,EAASE,SACdvK,MAAOqK,EAASM,eAAe3K,MAC/BjB,UAAWmI,aAAK3I,EAAQmL,UAAT,eACZnL,EAAQsL,SAAWS,EAASM,eAG/B,wBAASP,EAASQ,gBAChB,kBAAC,KAAD,OAEDrO,EAAQiO,UAKhBJ,EAASS,iBCUPC,GApCgD,SAAC1R,GAAW,IACjE8Q,EAAoB9Q,EAApB8Q,MAAOa,EAAa3R,EAAb2R,SACTC,EAAYpL,IAAMC,aAAY,SAACoL,GAAwB,IACnDC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YACXA,IAGDD,EAAOf,cAAgBgB,EAAYhB,YACrCY,GAAS,SAAAb,GAAK,kCACTA,GADS,kBAEXgB,EAAOf,YA1CA,SAACvG,EAAgBwH,EAAoBC,GACnD,IAAMJ,EAASpH,MAAMyH,KAAK1H,GAD8C,EAEtDqH,EAAOM,OAAOH,EAAY,GAArCI,EAFiE,oBAKxE,OAFAP,EAAOM,OAAOF,EAAU,EAAGG,GAEpBP,EAqCqBQ,CACG,UAAvBP,EAAOf,YAA0BD,EAAMwB,MAAQxB,EAAMyB,OACrDV,EAAOC,OAAOvF,MACdsF,EAAOE,YAAaxF,YAIxBoF,GAAS,SAAAb,GAAK,OAzCP,SACXgB,EACAC,EACAS,EACAC,GAEA,IAAMC,EAAcjI,MAAMyH,KAAKJ,GACzBa,EAAYlI,MAAMyH,KAAKH,GAF1B,EAGeW,EAAYP,OAAOK,EAAgBjG,MAAO,GAArD6F,EAHJ,oBAKHO,EAAUR,OAAOM,EAAqBlG,MAAO,EAAG6F,GAEhD,IAAMP,EAAc,GAIpB,OAHAA,EAAOW,EAAgBzB,aAAe2B,EACtCb,EAAOY,EAAqB1B,aAAe4B,EAEpCd,EAyBee,CACO,UAAvBd,EAAOf,YAA0BD,EAAMwB,MAAQxB,EAAMyB,OACzB,UAA5BR,EAAYhB,YAA0BD,EAAMwB,MAAQxB,EAAMyB,OAC1DT,EACAC,SAGH,CAACJ,IAEJ,OACE,kBAAC,KAAD,CAAiBC,UAAWA,GAC1B,kBAACzB,GAAA,EAAD,cACA,kBAAC,GAAD,CAAaW,MAAOA,EAAOtP,GAAG,UAC9B,kBAAC2O,GAAA,EAAD,eACA,kBAAC,GAAD,CAAaW,MAAOA,EAAOtP,GAAG,aCQrBqR,GA5DoD,SAAC7S,GAAW,IAE3E8S,EAIE9S,EAJF8S,YACAC,EAGE/S,EAHF+S,eACAC,EAEEhT,EAFFgT,iBACAC,EACEjT,EADFiT,iBAL0E,EAOlDzM,IAAMQ,UAAkB,GAP0B,mBAOrEmB,EAPqE,KAO7DjI,EAP6D,OAQlDsG,IAAMQ,SAAsB,CACpDsL,MAAO,GACPC,OAAQ,KAVkE,mBAQrEzB,EARqE,KAQ9Da,EAR8D,KAY5EnL,IAAMsC,WAAU,WAAO,IACToK,EADQ,aACOJ,GADP,SAEpBnB,EAAS,CACPW,MAAOY,EACPX,OAAQxR,OAAO6B,KAAKO,GAASb,QAAO,SAAAgB,GAAG,OAAKwP,EAAY3O,SAASb,UAElE,CAACwP,IACJ,IACMzS,EAAc,kBAAMH,GAAQ,IAOlC,OACE,oCACE,kBAACuL,EAAA,EAAD,CAASxD,MAAM,8BACb,kBAACyD,EAAA,EAAD,CAAYM,KAAK,QAAQnF,QAXP,kBAAM3G,GAAQ,KAY9B,kBAAC,KAAD,QAGJ,kBAACuJ,EAAA,EAAD,CACExJ,KAAMkI,EACNzH,QAASL,EACTsJ,kBAAgB,gBAEhB,kBAACC,EAAA,EAAD,CAAapI,GAAG,gBAAhB,8BACA,kBAACqI,EAAA,EAAD,KACE,kBAAC,GAAD,CAAaiH,MAAOA,EAAOa,SAAUA,KAEvC,kBAAC5H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQnD,QAASxG,EAAawE,MAAM,aAApC,UAGA,kBAACmF,EAAA,EAAD,CACEnJ,QAAQ,YACRgE,MAAM,UACNgC,QA7BW,WACnBoM,EAAiB/L,SAAU,EAC3B6L,EAAe,CAAC,WAAF,mBAAgBjC,EAAMwB,SACpCU,EAAiBlC,EAAMyB,QACvBrS,GAAQ,KAsBF,Y,oDCrBKiT,GAjCsC,SAACnT,GAAW,IACvDoT,EAAiCpT,EAAjCoT,eAAgBC,EAAiBrT,EAAjBqT,aACxB,OACE,kBAAC,IAAD,CACEpN,MAAOoN,GAAgB,GACvB9L,SAAU,SAACjH,GACT8S,EAAe9S,EAAMkH,OAAOvB,QAE9BwL,YAAY,YACZ6B,WAAY,CACVC,eACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,SACvB,kBAAChI,EAAA,EAAD,CAASxD,MAAM,UACb,kBAAC,KAAD,CAAYyL,SAAS,YAI3BC,aACE,kBAACH,GAAA,EAAD,CAAgBC,SAAS,OACvB,kBAAC/H,EAAA,EAAD,CACEkE,UAAWyD,EACXxM,QAAS,kBAAMuM,EAAe,MAE9B,kBAAC,KAAD,CAAWM,SAAS,YAI1BE,WAAY,CAAE,aAAc,cC1B9BC,GAAmBvP,aAAW,SAACC,GAAD,OAClCC,YAAa,CACXyK,KAAM,CACJ6E,YAAavP,EAAMI,QAAQ,GAC3BoP,aAAcxP,EAAMI,QAAQ,IAE9BqP,UAAW,CACTnP,MAAON,EAAMO,QAAQ4L,QAAQuD,KAC7B3G,gBAAiBmD,aAAQlM,EAAMO,QAAQ4L,QAAQ/D,MAAO,MAExD1E,MAAO,CACLiM,KAAM,iBAiFGC,GAhEkD,SAACnU,GAChE,IAAMkF,EAAU2O,KAEdO,EASEpU,EATFoU,YACAf,EAQErT,EARFqT,aACAgB,EAOErU,EAPFqU,gBACApE,EAMEjQ,EANFiQ,mBACAqE,EAKEtU,EALFsU,cACAxB,EAIE9S,EAJF8S,YACAC,EAGE/S,EAHF+S,eACAC,EAEEhT,EAFFgT,iBACAC,EACEjT,EADFiT,iBAEIsB,EAAWH,EAAc,EAG/B,OACE,kBAACI,GAAA,EAAD,CACE9O,UAAWmI,aAAK3I,EAAQ+J,KAAT,eACZ/J,EAAQ8O,UAAYO,KAGtBA,EACC,kBAACpE,GAAA,EAAD,CACEzK,UAAWR,EAAQ+C,MACnBpD,MAAM,UACNhE,QAAQ,YACRgF,UAAU,OAETuO,EANH,aASA,kBAACjE,GAAA,EAAD,CACEzK,UAAWR,EAAQ+C,MACnBpH,QAAQ,KACRW,GAAG,aACHqE,UAAU,OAJZ,+BASD0O,EACC,kBAAC9I,EAAA,EAAD,CAASxD,MAAM,UACb,kBAACyD,EAAA,EAAD,CAAYC,aAAW,SAAS9E,QAASyN,GACvC,kBAAC,KAAD,QAIJ,oCACE,kBAAC,GAAD,CAAQlB,eAnCO,SAACnN,GAAD,OAAmBoO,EAAgBpO,IAmCVoN,aAAcA,IACtD,kBAAC,GAAD,MACA,kBAAC,GAAD,CACEP,YAAaA,EACbC,eAAgBA,EAChBC,iBAAkBA,EAClBC,iBAAkBA,IAEpB,kBAAC,GAAD,CAAmBhD,mBAAoBA,OC5E3C5L,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1DiQ,OAAQ,CACN1H,UAAW,OACX2H,OAAQ,EACRC,eAAgB,MAChBC,eAAgB,UAChBC,YAAa,cA8HFC,GAlHoC,SAAC9U,GAClD,IAAMkF,EAAUb,KACR0Q,EAAwD/U,EAAxD+U,KAAMC,EAAkDhV,EAAlDgV,QAASC,EAAyCjV,EAAzCiV,QAAS/I,EAAgClM,EAAhCkM,UAAW+G,EAAqBjT,EAArBiT,iBAC3CzM,IAAMsC,WAAU,WACdmK,EAAiB/L,SAAU,KAE7B,IAAMgO,EAAgB,CAAEC,KAAMnI,IACxBoI,EAAgB,CACpB5T,GAAI,UACJD,OAAQiL,GACR2I,KAAMlJ,IAVoD,EAwBxDoJ,mBACF,CACEJ,QAASA,EACTF,KAAMA,EACNG,gBACAI,aAAc,CACZxC,YAAY,CAAE,WAAH,mBAAiBpQ,IAC5B6S,cAAexU,OAAO6B,KAAKO,GAASb,QAClC,SAAAgB,GAAG,OAAKZ,EAAcyB,SAASb,OAGnCkS,eAAgBvC,EAAiB/L,QACjCuO,iBAAkBxC,EAAiB/L,QACnCwO,kBAAmBzC,EAAiB/L,QACpCyO,uBAAwB1C,EAAiB/L,QACzCgF,aAEF0J,kBACAC,YACAC,gBACAC,eACAC,kBACA,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,MAAK,SAAAlB,GAAO,OAAKG,GAAL,mBAAuBH,UAjC7DmB,EAb0D,EAa1DA,cACA/H,EAd0D,EAc1DA,aACAX,EAf0D,EAe1DA,WACA2I,EAhB0D,EAgB1DA,KACA5I,EAjB0D,EAiB1DA,KACA6I,EAlB0D,EAkB1DA,SACAvD,EAnB0D,EAmB1DA,eACAC,EApB0D,EAoB1DA,iBACAuD,EArB0D,EAqB1DA,YACAlC,EAtB0D,EAsB1DA,gBAtB0D,IAuB1DxS,MAASiR,EAvBiD,EAuBjDA,YAAa0D,EAvBoC,EAuBpCA,UAAWC,EAvByB,EAuBzBA,SAAUC,EAvBe,EAuBfA,eAAgBrD,EAvBD,EAuBCA,aAkD7D,OACE,oCACE,kBAAC,GAAD,CACEe,YAAarT,OAAO6B,KAAK8T,GAAgB1N,OACzCqK,aAAcA,EACdgB,gBAAiBA,EACjBpE,mBAvBqB,SAAClM,GAC1BkP,EAAiB/L,SAAU,EAC3B8N,EAAQD,EAAK4B,OAAO,CAAC,2BAAK5S,GAAN,IAAgB6S,YAAa,IAAI3J,WAsBjDqH,cAhBgB,SAAChU,GACrB2S,EAAiB/L,SAAU,EAC3B,IALA2P,EACAC,EAIMC,GALNF,EAME9B,EALF+B,EAME/V,OAAO6B,KAAK8T,GAAgBrT,KAAI,SAAAd,GAAC,OAAIyU,SAASzU,EAAG,OALhDsU,EAAMvU,QAAO,SAAC2U,EAAGC,GAAJ,OAAWJ,EAAO3S,SAAS+S,OAO3ClC,EAAQ+B,IAWJjE,YAAaA,EACbC,eAAgBA,EAChBC,iBAAkBA,EAClBC,iBAAkBA,IAEpB,kBAACkE,EAAA,EAAD,KACE,kBAAC,IAAD,iBAAcf,IAAd,CAA+BgB,cAAY,EAACpL,KAAK,UAC/C,kBAAC,GAAD,CAAaqC,aAAcA,IAC3B,kBAAC,GAAD,CAAWZ,KAAMA,EAAMC,WAAYA,MAGvC,kBAAC2J,EAAA,EAAD,CACEC,mBAAkB,sBACZ,CAAC,EAAG,GAAI,GAAI,GAAI,KAAKhV,QAAO,SAACC,GAAD,OAAgBA,EAAIwS,EAAK/L,WADzC,CAEhB,CAAExD,MAAO,MAAOS,MAAO8O,EAAK/L,UAE9BnD,UAAU,MACVwJ,MAAOgH,EAAKrN,OACZsG,YAAamH,EACbhJ,KAAM+I,EACNe,YAAa,CACX3D,WAAY,CAAE,aAAc,iBAC5B4D,QAAQ,GAEVjI,aAxDmB,SACvBjP,EACAmX,GAFuB,OAGpBnB,EAASmB,IAsDRC,oBArD0B,SAC9BpX,GAD8B,OAE3BiW,EAAYzL,OAAOxK,EAAMkH,OAAOvB,SAoD/B0R,iBAAkBvI,GAClB1J,UAAWR,EAAQuP,W,UC9IrBpQ,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CAC1DyK,KAAM,CACJpC,OAAQ,OACRD,MAAO,OACPhG,QAAS,OACTuF,cAAe,eAkCJyL,GA5BgC,WAC7C,IAAM1S,EAAUb,KADmC,EAE3BmC,IAAMQ,SAAsB6Q,MAFD,mBAE5C9C,EAF4C,KAEtCC,EAFsC,KAG7C/B,EAAmBzM,IAAMsR,SAY/B,OACE,kBAACC,EAAA,EAAD,CAAKrS,UAAWR,EAAQ+J,MACtB,kBAAC,GAAD,CACE8F,KAAMA,EACNC,QAASA,EACTC,QAASzR,GACT0I,UAjBY,SAAC8L,EAAkBjU,GACnCkP,EAAiB/L,SAAU,EAC3B8N,GACE,SAAAiD,GAAG,OAAIA,EAAI5U,KAAI,SAAC3B,EAAK6K,GAAN,OACbA,IAAUyL,EAAV,uCACOtW,GAAQqC,GADf,IACyB6S,YAAa,IAAI3J,OACxCvL,SAYFuR,iBAAkBA,MChCpB1O,I,OAAQ2T,eAEdC,IAASjK,OACP,kBAAC,IAAMkK,WAAP,KACE,kBAAC,IAAD,CAAkB7T,MAAOA,IACvB,kBAAC,IAAM8T,SAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,GAAD,SAINC,SAASC,eAAe,W","file":"static/js/main.6658fb7d.chunk.js","sourcesContent":["import React from 'react';\n\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\ninterface ToastProps {\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  severity: \"error\" | \"warning\" | \"info\" | \"success\";\n  text: string;\n};\n\nexport const Toast: React.FunctionComponent<ToastProps> = (props) => {\n  const { open, setOpen, severity, text } = props;\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <Alert\n        elevation={6}\n        variant=\"filled\"\n        onClose={handleClose}\n        severity={severity}\n      >\n        {text}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default Toast;\n","import { Column } from 'react-table';\n\nexport type IResource = any;\n\nconst SIMPLE_HEADERS = Object.freeze({\n  \"resource\": \"Resource\",\n  \"accepts_medical\": \"Accepts Medi-Cal\",\n  \"provider_name\": \"Provider Name\",\n  \"provider_addloc\": \"Provider Location/Branch\",\n  \"contact\": \"Phone Number\",\n  \"call_in_advance\": \"Call In Advance\",\n  \"region\": \"Region\",\n  \"bob\": \"Black-Owned\",\n  \"last_update\": \"Last Updated\",\n  \"email\": \"Provider email\",\n  \"notes\": \"Notes\",\n  \"notes_es\": \"Notes (Spanish)\",\n  \"web_link\": \"Website\",\n  \"web_link_es\": \"Website (Spanish)\",\n  \"status\": \"Status\",\n});\n\nexport const CHECKBOX_GROUPS = Object.freeze({\n  \"county\": {\n    \"__header\": \"Counties Served\",\n    \"alameda\": \"Alameda\",\n    \"santa_clara\": \"Santa Clara\",\n    \"san_mateo\": \"San Mateo\",\n    \"contra_costa\": \"Contra Costa\",\n    \"marin\": \"Marin\",\n    \"monterey\": \"Monterey\",\n    \"sonoma\": \"Sonoma\",\n    \"solano\": \"Solano\",\n    \"napa\": \"Napa\",\n    \"san_francisco\": \"San Francisco\"\n  },\n});\n\nexport const RADIO_GROUPS = Object.freeze({\n  \"payment\": {\n    \"__header\": \"Payment Type\",\n    \"free\": \"Free\",\n    \"sliding_scale\": \"Sliding Scale\",\n    \"financial_assistance\": \"Discounts Available\",\n  }\n});\n\nconst SIMPLE_OPTIONS = Object.freeze({\n  \"resource\": {\n    \"meal\": \"Free Food Provider\",\n    \"grocery\": \"Grocery Provider\",\n    \"core\": \"Core Service Agency (basic emergency and support services)\",\n    \"financial\": \"Financial Assistance\",\n    \"legal_general_info\": \"Legal General Info (primary a link for general knowledge or know-your-rights material)\",\n    \"legal_assistance\": \"Legal Assistance (provides assistance e.g. counseling, court representation)\",\n    \"health\": \"Medical Resource (provides one of several sub-categories)\",\n    \"enrollment_support\": \"Enrollment Support (provides information on enrollment e.g. MediCal, CalFresh)\"\n  },\n});\n\nexport const RESOURCE_CONDITION = Object.freeze({\n  \"payment\": [\"health\", \"legal_assistance\", \"legal_general_info\"],\n});\n\nexport const NESTED_GROUPS = Object.freeze({ ...CHECKBOX_GROUPS, ...RADIO_GROUPS });\n\nexport const COMBO_COLUMNS = Object.freeze([\n  {\n    Header: \"Address\",\n    id: \"address\",\n    accessor: (row: IResource) => (\n      `${row.address}, ${row.city}, ${row.state} ${row.zip}`\n    ),\n  },\n  {\n    Header: \"Opening Hours\",\n    id: \"opening_hours\",\n    accessor: (row: IResource) => ([\n      row.mon && row.mon !== '0' && `Monday ${row.mon}`,\n      row.tues && row.tues !== '0' && `Tuesday ${row.tues}`,\n      row.wed && row.wed !== '0' && `Wednesday ${row.wed}`,\n      row.thr && row.thr !== '0' && `Thursday ${row.thr}`,\n      row.fri && row.fri !== '0' && `Friday ${row.fri}`,\n      row.sat && row.sat !== '0' && `Saturday ${row.sat}`,\n      row.sun && row.sun !== '0' && `Sunday ${row.sun}`,\n    ].filter(x => !!x).join(', ')),\n  },\n]);\n\nexport const BOOLEAN_COLUMNS: readonly string[] = Object.freeze([\n  \"accepts_medical\",\n  \"call_in_advance\",\n  \"bob\",\n]);\n\nexport const DEFAULT_SHOWN = Object.freeze([\n  \"provider_name\",\n  \"resource\",\n  \"county\",\n  \"payment\",\n  \"last_update\",\n]);\n\nconst NESTED_HEADERS = Object.keys(NESTED_GROUPS).reduce(\n  (acc: object, field: string) => ({\n    ...acc,\n    [field]: NESTED_GROUPS[field as keyof typeof CHECKBOX_GROUPS].__header,\n  }),\n  {},\n);\n\nconst COMBO_HEADERS = COMBO_COLUMNS.reduce(\n  (acc: object, column: Column<Object>) => ({\n    ...acc,\n    [column.id as string]: column.Header,\n  }),\n  {},\n);\n\nexport const HEADERS: any = Object.freeze({\n  ...SIMPLE_HEADERS,\n  ...NESTED_HEADERS,\n  ...COMBO_HEADERS,\n});\n\nconst SIMPLE_COLUMNS: readonly Column<Object>[] = Object.freeze(\n  Object.keys(SIMPLE_HEADERS).map(\n    key => ({ Header: (SIMPLE_HEADERS as any)[key], accessor: key })\n  ),\n) as readonly Column<Object>[];\n\nconst NESTED_COLUMNS: readonly Column<Object>[] = Object.freeze(\n  Object.keys(NESTED_GROUPS).map(\n    key => ({\n      Header: HEADERS[key],\n      accessor: (row: IResource) => {\n        return Object.keys((NESTED_GROUPS as any)[key]).filter(\n          field => field !== '__header' && row[field]\n        ).map(\n          field => (NESTED_GROUPS as any)[key][field]\n        ).join(', ')\n      },\n      id: key,\n    })\n  ),\n) as readonly Column<Object>[];\n\nexport const COLUMNS = Object.freeze([\n  ...SIMPLE_COLUMNS,\n  ...NESTED_COLUMNS,\n  ...COMBO_COLUMNS,\n]);\n\nexport const FLAT_OPTIONS = Object.keys(RADIO_GROUPS).reduce(\n  (acc: object, field: string) => {\n    const group = RADIO_GROUPS[field as keyof typeof RADIO_GROUPS];\n    const { __header, ...rest } = group;\n    return { ...acc, [field]: rest };\n  },\n  {}\n);\n\nexport const OPTIONS: any = Object.freeze({\n  ...SIMPLE_OPTIONS,\n  ...FLAT_OPTIONS,\n});\n\nexport const VALIDATORS: any = Object.freeze({\n  'provider_name': (name: string) => !!name,\n  'resource': (resource: string) => OPTIONS.resource.hasOwnProperty(resource),\n  'county': (county: string) => !!county,\n  'payment': (payment: string) => !!payment && !payment.includes(','),\n  'bob': (bob?: number | null) => bob != null,\n});\n","import React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MuiTextField from '@material-ui/core/TextField';\n\nimport { HEADERS, OPTIONS, CHECKBOX_GROUPS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  formControl: {\n    margin: theme.spacing(1),\n  },\n  checkboxError: {\n    color: theme.palette.error.main,\n  },\n}));\n\ninterface InputProps {\n  field: string;\n  fullWidth?: boolean;\n  required?: boolean;\n}\n\nexport const TextField: React.FunctionComponent<InputProps> = (props) => {\n  const classes = useStyles();\n  const { field, fullWidth, required } = props;\n  const { register, errors } = useFormContext();\n\n  return (\n    <MuiTextField\n      fullWidth={fullWidth}\n      required={required}\n      variant=\"filled\"\n      error={!!errors[field]}\n      label={HEADERS[field]}\n      name={field}\n      inputRef={register({ required })}\n      className={classes.formControl}\n    />\n  );\n};\n\ninterface RadioProps extends Omit<InputProps, 'field'> {\n  field: string;\n}\n\nexport const RadioGroup: React.FunctionComponent<RadioProps> = (props) => {\n  const classes = useStyles();\n  const { field, fullWidth, required } = props;\n  const { register, errors } = useFormContext();\n\n  return (\n    <FormControl\n      component=\"fieldset\"\n      fullWidth={fullWidth}\n      required={required}\n      error={!!errors[field]}\n      className={classes.formControl}\n    >\n      <FormLabel component=\"legend\">{HEADERS[field]}</FormLabel>\n      {Object.keys(OPTIONS[field]).map(option => (\n        <div>\n          <input\n            type=\"radio\"\n            id={option}\n            key={option}\n            name={field}\n            value={option}\n            ref={register({ required })}\n          />\n          <label htmlFor={option}>\n            {(OPTIONS[field] as any)[option]}\n          </label>\n        </div>\n      ))}\n    </FormControl>\n  );\n};\n\ninterface CheckboxGroupProps extends Omit<InputProps, 'field'> {\n  field: keyof typeof CHECKBOX_GROUPS;\n}\n\nexport const CheckboxGroup: React.FunctionComponent<CheckboxGroupProps> =\n    (props) => {\n  const classes = useStyles();\n  const { field, fullWidth, required } = props;\n  const { register, errors, setValue, triggerValidation } = useFormContext();\n  const setAll = React.useCallback(() => {\n    setValue(field, Object.keys(CHECKBOX_GROUPS[field]));\n    triggerValidation(field);\n  }, [setValue, triggerValidation, field]);\n  const setNone = React.useCallback(() => {\n    setValue(field, []);\n    triggerValidation(field);\n  }, [setValue, triggerValidation, field]);\n  return (\n    <FormControl\n      component=\"fieldset\"\n      fullWidth={fullWidth}\n      required={required}\n      error={!!errors[field]}\n      className={classes.formControl}\n    >\n      <FormLabel component=\"legend\">\n        {CHECKBOX_GROUPS[field].__header}\n      </FormLabel>\n      <div style={{ display: 'flex' }}>\n        <button onClick={setAll}>All</button>\n        <button onClick={setNone}>None</button>\n      </div>\n      {\n        Object.keys(CHECKBOX_GROUPS[field]).filter(\n          option => option !== '__header'\n        ).map(\n          (option) => (\n            <div>\n              <input\n                type=\"checkbox\"\n                id={option}\n                key={option}\n                value={option}\n                name={field}\n                ref={register({ required })}\n              />\n              <label htmlFor={option}>\n                {(CHECKBOX_GROUPS[field] as any)[option]}\n              </label>\n            </div>\n          )\n        )\n      }\n    </FormControl>\n  );\n};\n\nexport const RequiredCheckbox: React.FunctionComponent<InputProps> =\n    (props) => {\n  const classes = useStyles();\n  const { field } = props;\n  const { control, errors } = useFormContext();\n  const [checked, setChecked] = React.useState<boolean>(\n    !!control.defaultValuesRef.current[field]\n  );\n  const [indeterminate, setIndeterminate] = React.useState<boolean>(\n    control.defaultValuesRef.current[field] == null\n  );\n  const onChange = React.useCallback(\n    ([event]: React.ChangeEvent<HTMLInputElement>[]) => {\n      const checked = !indeterminate && event.target.checked;\n      setChecked(checked);\n      setIndeterminate(false);\n      return checked;\n    },\n    [indeterminate, setChecked, setIndeterminate],\n  );\n\n  return (\n    <>\n      <span className={errors[field] && classes.checkboxError}>\n        <Controller\n          as={\n            <input\n              ref={input => {\n                if (input) {\n                  input.indeterminate = indeterminate;\n                }\n              }}\n              checked={checked}\n              id={field}\n              type=\"checkbox\"\n            />\n          }\n          name={field}\n          control={control}\n          onChange={onChange}\n          rules={{ validate: (x: any) => x != null }}\n        />\n      <label htmlFor={field}>{HEADERS[field]}</label>\n      </span>\n    </>\n  );\n};\n\nexport const Checkbox: React.FunctionComponent<InputProps> = (props) => {\n  const { field } = props;\n  const { register } = useFormContext();\n\n  return (\n    <>\n      <input type=\"checkbox\" name={field} ref={register} />\n      <label htmlFor={field}>{HEADERS[field]}</label>\n    </>\n  );\n};\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { DevTool } from \"react-hook-form-devtools\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\n\nimport {\n  TextField,\n  RadioGroup,\n  CheckboxGroup,\n  RequiredCheckbox,\n} from './ResourceFormFields';\nimport { RESOURCE_CONDITION } from 'utils/constants';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  formGroup: {\n    margin: theme.spacing(1),\n  },\n}));\n\ninterface ResourceFormProps { }\n\nexport const ResourceForm: React.FunctionComponent<ResourceFormProps> = \n    () => {\n  const classes = useStyles();\n  const { control, watch } = useFormContext();\n  const resource = watch('resource');\n\n  return (\n    <>\n      <DevTool control={control} />\n      <TextField fullWidth required field=\"provider_name\" />\n      <RadioGroup required field=\"resource\" />\n      <CheckboxGroup required field=\"county\" />\n      {RESOURCE_CONDITION.payment.includes(resource) &&\n          <RadioGroup required field=\"payment\" />}\n      <TextField fullWidth field=\"address\" />\n      <div className={classes.formGroup}>\n        <RequiredCheckbox field=\"bob\" />\n      </div>\n    </>\n  );\n};\n\nexport default ResourceForm;\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Toast from 'components/common/Toast';\nimport ResourceForm from './ResourceForm';\nimport { IResource, HEADERS } from 'utils/constants';\n\ninterface ResourceDialogProps {\n  title: string;\n  description?: string;\n  isOpen: boolean;\n  setOpen: (isOpen: boolean) => void;\n  onSubmit: (resource: IResource) => void;\n  successText: string;\n};\n\nconst truncate = (str: string, n: number, useWordBoundary: boolean) => {\n  if (str.length <= n) { return str; }\n  const subString = str.substr(0, n-1);\n  return (useWordBoundary\n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const ResourceDialog: React.FunctionComponent<ResourceDialogProps> =\n    (props) => {\n  const { title, description, isOpen, setOpen, onSubmit, successText } = props;\n  const [ errorOpen, setErrorOpen ] = React.useState<boolean>(false);\n  const [ errorText, setErrorText ] = React.useState<string>(\"\");\n  const [ successOpen, setSuccessOpen ] = React.useState<boolean>(false);\n  const handleClose = () => setOpen(false);\n  const { handleSubmit, errors, formState } = useFormContext();\n  React.useEffect(() => {\n    const errorFields = Object.keys(errors);\n    if (errorFields.length !== 0) {\n      setErrorText(truncate(`Missing required fields: ${\n        errorFields.map(\n          error => HEADERS.hasOwnProperty(error) ? HEADERS[error] : error\n        ).join(', ')\n      }`, 75, true));\n      setErrorOpen(true);\n      setSuccessOpen(false);\n    } else if (formState.submitCount > 0) {\n      setSuccessOpen(true);\n      setErrorOpen(false);\n    }\n  // eslint-disable-next-line\n  }, [formState.submitCount])\n\n  return (\n    <div>\n      <Dialog\n        maxWidth=\"lg\"\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n      >\n        <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{description}</DialogContentText>\n          <ResourceForm />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleSubmit(onSubmit)}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Toast\n        open={errorOpen}\n        setOpen={setErrorOpen}\n        severity=\"error\"\n        text={errorText}\n      />\n      <Toast\n        open={successOpen}\n        setOpen={setSuccessOpen}\n        severity=\"success\"\n        text={successText}\n      />\n    </div>\n  )\n}\n\nexport default ResourceDialog;\n","import {\n  IResource,\n  BOOLEAN_COLUMNS,\n  CHECKBOX_GROUPS,\n  RADIO_GROUPS,\n  NESTED_GROUPS,\n} from 'utils/constants';\n\nexport const fromBoolean = (resource: IResource) => ({\n  ...resource,\n  ...BOOLEAN_COLUMNS.reduce(\n    (acc: object, field: string) => ({ ...acc, [field]: Number(resource[field]) }),\n    {}\n  ),\n});\n\n// county: [a, b, c] => {a:1, b:1, c:1, d:0}\nexport const toFlat =\n    (resource: IResource) => Object.keys(NESTED_GROUPS).reduce(\n  (partial: any, field: string) => {\n    const { [field]: nest, ...rest } = partial;\n    if (nest == null) {\n      return partial;\n    }\n    const list = Array.isArray(nest) ? nest : [nest];\n    const ones = list.reduce(\n      (acc: object, key: string) => ({ ...acc, [key]: 1 }),\n      {},\n    );\n    const zeros = Object.keys(\n      NESTED_GROUPS[field as keyof typeof NESTED_GROUPS]\n    ).filter(\n      key => key !== '__header' && !list.includes(key)\n    ).reduce(\n      (acc: object, key: string) => ({ ...acc, [key]: 0 }),\n      {},\n    );\n    return { ...rest, ...ones, ...zeros };\n  },\n  resource,\n);\n\n// {a:1, b:1, c:1, d:0} => county: [a, b, c]\nexport const toCheckboxes =\n    (resource: IResource) => Object.keys(CHECKBOX_GROUPS).reduce(\n  (partial: any, field: string) => ({\n    ...partial,\n    [field]: Object.keys(\n      CHECKBOX_GROUPS[field as keyof typeof CHECKBOX_GROUPS]\n    ).filter(\n      key => key !== '__header' && !!partial[key]\n    ),\n  }),\n  resource,\n);\n\n// {a:1, b:0, c:0, d:0} => payment: a\nexport const toRadio =\n    (resource: IResource) => Object.keys(RADIO_GROUPS).reduce(\n  (partial: any, field: string) => {\n    const matches = Object.keys(\n      RADIO_GROUPS[field as keyof typeof RADIO_GROUPS]\n    ).filter(\n      key => key !== '__header' && !!partial[key]\n    );\n    return {\n      ...partial,\n      [field]: matches.length === 1 ? matches[0] : '',\n    };\n  },\n  resource,\n);\n\nexport const toForm = (resource: IResource) => (\n  toCheckboxes(toRadio(resource))\n);\nexport const fromForm = (resource: IResource) => toFlat(fromBoolean(resource));\n","import React from 'react';\nimport { useForm, FormContext } from 'react-hook-form';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { ResourceDialog } from './ResourceDialog';\nimport { toForm, fromForm } from 'utils/resource';\nimport { IResource } from 'utils/constants';\n\n\ninterface EditButtonProps {\n  originalResource: IResource;\n  editHandler: (resource: IResource) => void;\n};\n\nconst EditButton: React.FunctionComponent<EditButtonProps> = (props) => {\n  const { originalResource, editHandler } = props;\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const initialForm = toForm(originalResource);\n  const methods = useForm({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n    defaultValues: initialForm,\n  });\n  const handleClickOpen = () => {\n    if (JSON.stringify(methods.getValues()) !==\n        JSON.stringify(initialForm)) {\n      methods.reset(initialForm);\n    }\n    setOpen(true);\n  }\n  const onSubmit = (resource: IResource) => {\n    editHandler(fromForm(resource));\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Edit Resource\">\n        <IconButton aria-label=\"Edit Resource\" onClick={handleClickOpen} size=\"small\">\n          <EditIcon />\n        </IconButton>\n      </Tooltip>\n      <FormContext {...methods}>\n        <ResourceDialog\n          title=\"Edit Resource\"\n          isOpen={isOpen}\n          setOpen={setOpen}\n          onSubmit={onSubmit}\n          successText=\"Successfully edited resource\"\n        />\n      </FormContext>\n    </>\n  )\n}\n\nexport default EditButton;\n","import React from 'react';\nimport { Row } from 'react-table';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport EditButton from './EditButton';\nimport { IResource } from 'utils/constants';\n\ninterface ActionButtonsCellProps {\n  row: Row<Object>;\n  updateRow: (rowIndex: number, resource: IResource) => void;\n}\n\nconst ActionButtonsCell: React.FunctionComponent<ActionButtonsCellProps> =\n    (props) => {\n  const { row, updateRow } = props;\n  const editHandler = (resource: IResource) => updateRow(row.index, resource);\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\" as \"row\" }}>\n      <Checkbox\n        {...row.getToggleRowSelectedProps()}\n        color=\"primary\"\n        style={{ padding: 0 }}\n      />\n      <EditButton originalResource={row.original} editHandler={editHandler} />\n    </div>\n  );\n};\n\nexport default ActionButtonsCell;\n","import React from 'react';\nimport { TableToggleAllRowsSelectedProps } from 'react-table';\nimport Checkbox from '@material-ui/core/Checkbox';\n\ninterface ActionButtonsHeaderProps {\n  getToggleAllRowsSelectedProps: (\n    props?: Partial<TableToggleAllRowsSelectedProps>,\n  ) => TableToggleAllRowsSelectedProps;\n}\n\nconst ActionButtonsHeader: React.FunctionComponent<ActionButtonsHeaderProps> =\n    (props) => {\n  const { getToggleAllRowsSelectedProps } = props;\n  return (\n    <Checkbox {...getToggleAllRowsSelectedProps()} color=\"primary\" />\n  );\n};\n\nexport default ActionButtonsHeader;\n","import React from 'react';\nimport { Column } from 'react-table';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { VALIDATORS } from 'utils/constants';\n\nconst useStyles = makeStyles(theme => ({\n  error: {\n    background: theme.palette.error.light,\n    width: '100%',\n    height: '100%',\n    minWidth: '100%',\n    minHeight: '100%',\n  },\n}));\n\ninterface ErrorCellProps {\n  value: any;\n  column: Column<Object>;\n}\n\nconst ErrorCell: React.FunctionComponent<ErrorCellProps> = (props) => {\n  const classes = useStyles();\n  const { column } = props;\n  const value = column.id === 'last_update' ? (\n    new Date(props.value).toLocaleString(\n      'en-US', { timeZoneName: 'short' }\n    )\n  ) : props.value;\n  const hasErrors = column.id && VALIDATORS[column.id] &&\n      !VALIDATORS[column.id](value);\n\n  return (\n    hasErrors ?\n      <div className={classes.error}>{value}{'\\xa0'}</div> :\n      (value != null ? value.toString() : null)\n  );\n};\n\nexport default ErrorCell;\n","import React from 'react';\nimport { Row } from 'react-table';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport MuiTableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell'\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  zebra: {\n    backgroundColor: theme.palette.grey['100'],\n  },\n}));\n\ninterface TableBodyProps {\n  page: Array<Row<Object>>;\n  prepareRow: (row: Row<Object>) => void;\n};\n\nconst TableBody: React.FunctionComponent<TableBodyProps> = (props) => {\n  const classes = useStyles();\n  const { page, prepareRow } = props;\n\n  return (\n    <MuiTableBody>\n      {page.map(row => {\n        prepareRow(row);\n        return (\n          <TableRow\n            {...row.getRowProps()}\n            className={clsx({ [classes.zebra]: row.index % 2 })}\n          >\n            {row.cells.map(cell => {\n              return (\n                <TableCell\n                  {...cell.getCellProps()}\n                  padding={\n                    cell.column.id === 'actions' ?\n                    \"checkbox\" :\n                    \"default\"\n                  }\n                >\n                  {cell.render('Cell')}\n                </TableCell>\n              )\n            })}\n          </TableRow>\n        )\n      })}\n    </MuiTableBody>\n  );\n};\n\nexport default TableBody;\n","import React from 'react';\nimport { HeaderGroup } from 'react-table';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  header: {\n    backgroundColor: theme.palette.grey['200'],\n  },\n}));\n\ninterface TableHeaderProps {\n  headerGroups: Array<HeaderGroup<Object>>;\n};\n\nconst TableHeader: React.FunctionComponent<TableHeaderProps> = (props) => {\n  const classes = useStyles();\n  const { headerGroups } = props;\n\n  return (\n    <TableHead>\n      {headerGroups.map(headerGroup => (\n        <TableRow {...headerGroup.getHeaderGroupProps()}>\n          {headerGroup.headers.map(column => (\n            <TableCell\n              className={classes.header}\n              padding={\n                column.id === 'actions' ? \"checkbox\" : \"default\"\n              }\n              {...(column.id === 'actions'\n                ? column.getHeaderProps()\n                : column.getHeaderProps(column.getSortByToggleProps()))}\n            >\n              {column.id !== 'actions' ? (\n                <TableSortLabel\n                  active={column.isSorted}\n                  direction={column.isSortedDesc ? 'desc' : 'asc'}\n                >\n                  {column.render('Header')}\n                </TableSortLabel>\n              ) : column.render('Header')}\n            </TableCell>\n          ))}\n        </TableRow>\n      ))}\n    </TableHead>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\n\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport {\n  TablePaginationActionsProps\n} from '@material-ui/core/TablePagination/TablePaginationActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }),\n);\n\nconst TablePaginationActions: (\n  React.FunctionComponent<TablePaginationActionsProps>\n) = (props) => {\n  const classes = useStyles();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const maxPages = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n  const handleFirstPageButtonClick =\n      (event: React.MouseEvent<HTMLButtonElement>) => onChangePage(event, 0);\n  const handleBackButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => onChangePage(event, page - 1);\n  const handleNextButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => onChangePage(event, page + 1);\n  const handleLastPageButtonClick = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => onChangePage(event, maxPages);\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0}>\n        <FirstPageIcon />\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0}>\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton onClick={handleNextButtonClick} disabled={page >= maxPages}>\n        <KeyboardArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= maxPages}\n      >\n        <LastPageIcon />\n      </IconButton>\n    </div>\n  );\n}\n\nexport default TablePaginationActions;\n","import React from 'react';\nimport { useForm, FormContext } from 'react-hook-form';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\ninterface FilterButtonProps { }\n\nconst FilterButton: React.FunctionComponent<FilterButtonProps> = () => {\n  return (\n    <>\n      <Tooltip title=\"Advanced Filters\">\n        <IconButton aria-label=\"Advanced Filters\" size=\"small\">\n          <FilterListIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default FilterButton;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { useForm, FormContext } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { ResourceDialog } from './ResourceDialog';\nimport { fromForm } from 'utils/resource';\nimport { IResource } from 'utils/constants';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  button: {\n    textTransform: \"none\",\n    margin: theme.spacing(1),\n  },\n}));\n\ninterface NewResourceProps {\n  newResourceHandler: (resource: IResource) => void;\n}\n\nconst NewResourceButton: React.FunctionComponent<NewResourceProps> =\n    (props) => {\n  const classes = useStyles();\n  const { newResourceHandler } = props;\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const methods = useForm<IResource>({\n    mode: 'onChange',\n    reValidateMode: 'onChange',\n  });\n  const handleClickOpen = () => setOpen(true);\n  const onSubmit = (resource: IResource) => {\n    newResourceHandler(fromForm(resource));\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<AddIcon />}\n        className={classes.button}\n        onClick={handleClickOpen}\n      >\n        <Typography noWrap>New Resource</Typography>\n      </Button>\n      <FormContext {...methods}>\n        <ResourceDialog\n          title=\"New Resource\"\n          description=\"Add a resource to the community map.\"\n          isOpen={isOpen}\n          setOpen={setOpen}\n          onSubmit={onSubmit}\n          successText=\"Successfully added resource\"\n        />\n      </FormContext>\n    </div>\n  )\n};\n\nexport default NewResourceButton;\n","import React from \"react\";\nimport clsx from 'clsx';\nimport { Droppable, Draggable, } from \"react-beautiful-dnd\";\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\nimport DragHandleIcon from '@material-ui/icons/DragHandle';\n\nimport { HEADERS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  draggable: {\n    display: 'flex',\n    userSelect: 'none',\n    background: theme.palette.background.paper,\n  },\n  dragging: {\n    background: lighten(theme.palette.primary.light, 0.85),\n  },\n  droppable: {\n    minHeight: '1px',\n  },\n  draggingOver: {\n    background: theme.palette.grey['100'],\n  },\n}));\n\nexport interface IListResult {\n  shown: string[];\n  hidden: string[];\n}\n\ninterface ReorderListProps {\n  lists: IListResult;\n  id: keyof IListResult;\n}\n\nexport const ReorderList: React.FunctionComponent<ReorderListProps> = (props) => {\n  const classes = useStyles();\n  const { lists, id } = props;\n\n  return (\n    <Droppable droppableId={id}>\n      {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            className={clsx(classes.droppable, {\n              [classes.draggingOver]: snapshot.isDraggingOver,\n            })}\n          >\n            {lists[id].map((item, index) => (\n              <Draggable key={item} draggableId={item} index={index}>\n                {// tslint:disable-next-line:no-shadowed-variable\n                (provided, snapshot) => (\n                  <div\n                    {...provided.draggableProps}\n                    ref={provided.innerRef}\n                    style={provided.draggableProps.style}\n                    className={clsx(classes.draggable, {\n                      [classes.dragging]: snapshot.isDragging,\n                    })}\n                  >\n                    <div {...provided.dragHandleProps}>\n                      <DragHandleIcon />\n                    </div>\n                    {HEADERS[item]}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n      )}\n    </Droppable>\n  );\n}\n\nexport default ReorderList;\n","import React from \"react\";\nimport {\n  DragDropContext,\n  DraggableLocation,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport Typography from '@material-ui/core/Typography';\n\nimport { ReorderList, IListResult } from './ReorderList';\n\nconst reorder = (list: string[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst move = (\n  source: string[],\n  destination: string[],\n  droppableSource: DraggableLocation,\n  droppableDestination: DraggableLocation,\n) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result: any = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\ninterface ReorderFormProps {\n  lists: IListResult;\n  setLists: React.Dispatch<React.SetStateAction<IListResult>>;\n}\n\nconst ReorderForm: React.FunctionComponent<ReorderFormProps> = (props) => {\n  const { lists, setLists } = props;\n  const onDragEnd = React.useCallback((result: DropResult) => {\n    const { source, destination } = result;\n    if (!destination) {\n      return;\n    }\n    if (source.droppableId === destination.droppableId) {\n      setLists(lists => ({\n        ...lists,\n        [source.droppableId]: reorder(\n          source.droppableId === 'shown' ? lists.shown : lists.hidden,\n          result.source.index,\n          result.destination!.index,\n        ),\n      }));\n    } else {\n      setLists(lists => move(\n        source.droppableId === 'shown' ? lists.shown : lists.hidden,\n        destination.droppableId === 'shown' ? lists.shown : lists.hidden,\n        source,\n        destination\n      ));\n    }\n  }, [setLists]);\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Typography>Shown</Typography>\n      <ReorderList lists={lists} id=\"shown\" />\n      <Typography>Hidden</Typography>\n      <ReorderList lists={lists} id=\"hidden\" />\n    </DragDropContext>\n  );\n}\n\nexport default ReorderForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ViewColumnRoundedIcon from '@material-ui/icons/ViewColumnRounded';\n\nimport { IListResult } from './ReorderList';\nimport ReorderForm from './ReorderForm';\nimport { HEADERS } from 'utils/constants';\n\ninterface ReorderButtonProps {\n  setColumnOrder: (updater: any) => void;\n  setHiddenColumns: (updater: any) => void;\n  skipPageResetRef: React.MutableRefObject<boolean | undefined>;\n  columnOrder: string[];\n}\n\nconst ReorderButton: React.FunctionComponent<ReorderButtonProps> = (props) => {\n  const {\n    columnOrder,\n    setColumnOrder,\n    setHiddenColumns,\n    skipPageResetRef\n  } = props;\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const [lists, setLists] = React.useState<IListResult>({\n    shown: [],\n    hidden: [],\n  });\n  React.useEffect(() => {\n    const [, ...realColumns] = columnOrder;\n    setLists({\n      shown: realColumns,\n      hidden: Object.keys(HEADERS).filter(key => !columnOrder.includes(key)),\n    });\n  }, [columnOrder])\n  const handleClickOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleSubmit = () => {\n    skipPageResetRef.current = true;\n    setColumnOrder(['actions', ...lists.shown]);\n    setHiddenColumns(lists.hidden);\n    setOpen(false);\n  };\n  return (\n    <>\n      <Tooltip title=\"Add/Remove/Reorder Columns\">\n        <IconButton size=\"small\" onClick={handleClickOpen}>\n          <ViewColumnRoundedIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        open={isOpen}\n        onClose={handleClose}\n        aria-labelledby=\"dialog-title\"\n      >\n        <DialogTitle id=\"dialog-title\">Add/Remove/Reorder Columns</DialogTitle>\n        <DialogContent>\n          <ReorderForm lists={lists} setLists={setLists} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSubmit}\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default ReorderButton;\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport SearchIcon from '@material-ui/icons/Search';\n\ninterface SearchProps {\n  onSearchChange: (value: string) => void;\n  globalFilter: string;\n};\n\nconst Search: React.FunctionComponent<SearchProps> = (props) => {\n  const { onSearchChange, globalFilter } = props;\n  return (\n    <TextField\n      value={globalFilter || ''}\n      onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n        onSearchChange(event.target.value);\n      }}\n      placeholder=\"Search...\"\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <Tooltip title=\"Search\">\n              <SearchIcon fontSize=\"small\" />\n            </Tooltip>\n          </InputAdornment>\n        ),\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              disabled={!globalFilter}\n              onClick={() => onSearchChange(\"\")}\n            >\n              <ClearIcon fontSize=\"small\" />\n            </IconButton>\n          </InputAdornment>\n        ),\n        inputProps: { 'aria-label': \"Search\" },\n      }}\n    />\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport FilterButton from './FilterButton';\nimport NewResourceButton from './NewResourceButton';\nimport ReorderButton from './ReorderButton';\nimport Search from './Search';\nimport { IResource } from 'utils/constants';\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(1),\n    },\n    highlight: {\n      color: theme.palette.primary.dark,\n      backgroundColor: lighten(theme.palette.primary.light, 0.85),\n    },\n    title: {\n      flex: '1 1 100%',\n    },\n  }),\n);\n\ninterface TableToolbarProps {\n  numSelected: number;\n  globalFilter: string;\n  setGlobalFilter: (filterValue: string) => void;\n  newResourceHandler: (resource: IResource) => void;\n  deleteHandler: (event: React.MouseEvent<HTMLElement>) => void;\n  columnOrder: string[];\n  setColumnOrder: (updater: any) => void;\n  setHiddenColumns: (updater: any) => void;\n  skipPageResetRef: React.MutableRefObject<boolean | undefined>;\n}\n\nconst TableToolbar: React.FunctionComponent<TableToolbarProps> = (props) => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    globalFilter,\n    setGlobalFilter,\n    newResourceHandler,\n    deleteHandler,\n    columnOrder,\n    setColumnOrder,\n    setHiddenColumns,\n    skipPageResetRef,\n  } = props;\n  const selected = numSelected > 0;\n  const onSearchChange = (value: string) => setGlobalFilter(value);\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: selected,\n      })}\n    >\n      {selected ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Drafts (Fake Data For Demo)\n        </Typography>\n      )}\n      {selected ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={deleteHandler}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n          <Search onSearchChange={onSearchChange} globalFilter={globalFilter}/>\n          <FilterButton />\n          <ReorderButton\n            columnOrder={columnOrder}\n            setColumnOrder={setColumnOrder}\n            setHiddenColumns={setHiddenColumns}\n            skipPageResetRef={skipPageResetRef}\n          />\n          <NewResourceButton newResourceHandler={newResourceHandler}/>\n        </>\n      )}\n    </Toolbar>\n  );\n};\n\nexport default TableToolbar;\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport MaUTable from '@material-ui/core/Table';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport {\n  useColumnOrder,\n  useGlobalFilter,\n  usePagination,\n  useRowSelect,\n  useSortBy,\n  useTable,\n  Column\n} from 'react-table';\n\nimport ActionButtonsCell from './ActionButtonsCell';\nimport ActionButtonsHeader from './ActionButtonsHeader';\nimport ErrorCell from './ErrorCell';\nimport TableBody from './TableBody';\nimport TableHeader from './TableHeader';\nimport TablePaginationActions from './TablePaginationActions';\nimport TableToolbar from './TableToolbar';\nimport { IResource, DEFAULT_SHOWN, HEADERS } from 'utils/constants';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  footer: {\n    minHeight: \"54px\",\n    border: 0,\n    borderTopWidth: \"1px\",\n    borderTopColor: \"#e0e0e0\",\n    borderStyle: \"solid\",\n  },\n}));\n\ninterface TableProps {\n  columns: readonly Column<Object>[];\n  data: readonly IResource[];\n  setData: (data: IResource[]) => void;\n  updateRow: (rowIndex: number, value: IResource) => void;\n  skipPageResetRef: React.MutableRefObject<boolean | undefined>;\n};\n\nconst Table: React.FunctionComponent<TableProps> = (props) => {\n  const classes = useStyles();\n  const { data, setData, columns, updateRow, skipPageResetRef } = props;\n  React.useEffect(() => {\n    skipPageResetRef.current = false;\n  });\n  const defaultColumn = { Cell: ErrorCell };\n  const actionsColumn = {\n    id: 'actions',\n    Header: ActionButtonsHeader,\n    Cell: ActionButtonsCell,\n  };\n  const {\n    getTableProps,\n    headerGroups,\n    prepareRow,\n    rows,\n    page,\n    gotoPage,\n    setColumnOrder,\n    setHiddenColumns,\n    setPageSize,\n    setGlobalFilter,\n    state: { columnOrder, pageIndex, pageSize, selectedRowIds, globalFilter },\n  } = useTable(\n    {\n      columns: columns as Column<Object>[],\n      data: data as Object[],\n      defaultColumn,\n      initialState: {\n        columnOrder: ['actions', ...DEFAULT_SHOWN],\n        hiddenColumns: Object.keys(HEADERS).filter(\n          key => !DEFAULT_SHOWN.includes(key)\n        ),\n      },\n      autoResetPage: !skipPageResetRef.current,\n      autoResetSortBy: !skipPageResetRef.current,\n      autoResetFilters: !skipPageResetRef.current,\n      autoResetGlobalFilter: !skipPageResetRef.current,\n      updateRow,\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useColumnOrder,\n    hooks => hooks.allColumns.push(columns => [actionsColumn, ...columns]),\n  );\n\n  const handleChangePage = (\n    event: React.MouseEvent<HTMLElement> | null,\n    newPage: number,\n  ) => gotoPage(newPage);\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => setPageSize(Number(event.target.value));\n  const newResourceHandler = (resource: IResource) => {\n    skipPageResetRef.current = true;\n    setData(data.concat([{ ...resource, last_update: new Date() }]));\n  }\n  const removeByIndexs = (\n    array: readonly IResource[],\n    indexs: number[],\n  ) => array.filter((_, i) => !indexs.includes(i));\n  const deleteHandler = (event: React.MouseEvent<HTMLElement>) => {\n    skipPageResetRef.current = true;\n    const newData = removeByIndexs(\n      data,\n      Object.keys(selectedRowIds).map(x => parseInt(x, 10)),\n    );\n    setData(newData);\n  };\n\n  return (\n    <>\n      <TableToolbar\n        numSelected={Object.keys(selectedRowIds).length}\n        globalFilter={globalFilter}\n        setGlobalFilter={setGlobalFilter}\n        newResourceHandler={newResourceHandler}\n        deleteHandler={deleteHandler}\n        columnOrder={columnOrder}\n        setColumnOrder={setColumnOrder}\n        setHiddenColumns={setHiddenColumns}\n        skipPageResetRef={skipPageResetRef}\n      />\n      <TableContainer>\n        <MaUTable {...getTableProps()} stickyHeader size=\"small\">\n          <TableHeader headerGroups={headerGroups} />\n          <TableBody page={page} prepareRow={prepareRow} />\n        </MaUTable>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[\n          ...([5, 10, 25, 50, 100].filter((x: number) => (x < data.length))),\n          { label: 'All', value: data.length },\n        ]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={pageSize}\n        page={pageIndex}\n        SelectProps={{\n          inputProps: { 'aria-label': 'rows per page' },\n          native: true,\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n        ActionsComponent={TablePaginationActions}\n        className={classes.footer}\n      />\n    </>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box'\n\nimport Table from 'components/table/Table';\nimport { IResource, COLUMNS } from 'utils/constants';\nimport * as results from 'assets/meals.json';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n  },\n}));\n\ninterface AppProps { }\n\nconst App: React.FunctionComponent<AppProps> = () => {\n  const classes = useStyles();\n  const [data, setData] = React.useState<IResource[]>(results.rows);\n  const skipPageResetRef = React.useRef<boolean>();\n  const updateRow = (rowIndex: number, resource: IResource) => {\n    skipPageResetRef.current = true;\n    setData(\n      old => old.map((row, index) => (\n        index === rowIndex ?\n          { ...row, ...resource, last_update: new Date() } :\n          row\n      ))\n    );\n  };\n\n  return (\n    <Box className={classes.root}>\n      <Table\n        data={data}\n        setData={setData}\n        columns={COLUMNS}\n        updateRow={updateRow}\n        skipPageResetRef={skipPageResetRef}\n      />\n    </Box>\n  );;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport \"typeface-roboto\";\n\nimport App from 'containers/App';\nimport './index.css';\n\nconst theme = createMuiTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <React.Fragment>\n        <CssBaseline />\n        <App />\n      </React.Fragment>\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}